# Workflow to run when there is a direct push to the main branch, or a PR is submitted.  
## The workflow runs three workflows - Valdation, Execution, and HTML Deployment.
## The jobs are dependent on the previous succeding - if valdiation fails, the rest will, if 
## execution fails, html deployment will not run.
## Each job runs on its own runner with an independent environment, with the exception of the 
## HTML generation, which occurs on a single runner using the global environment.

name: MatrixTest
on: 
  push:
    branches:
      - main
    paths:
      - 'notebooks/**.ipynb'
      - '*.yml'
  pull_request:
    paths:
      - 'notebooks/**.ipynb'
env:
  ARCH_ON_CI: "normal"

jobs:
  gather-notebooks:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v3
    ## routine to gather only the changed notebook files and supply them to the matrix
    - name: changed-files
      id: get-changed-files
      uses: tj-actions/changed-files@v18.4
      with:
        separator: ","
        files: |
          **/*.ipynb
    ## convert the list of files to an array and push them into the matrix as a json object      
    - name: set-matrix
      id: set-matrix
      run: |
        IFS=',' read -r -a array <<< "${{steps.get-changed-files.outputs.all_changed_files}}"
        echo "{$array}"
        echo "::set-output name=matrix::$(jq --compact-output --null-input '$ARGS.positional' --args -- "${array[@]}")"
 
  notebook-validation:
    needs: gather-notebooks
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
            notebooks: ${{ fromJson(needs.gather-notebooks.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4 ## needed for caching
        with:
          python-version: '3.9'
          check-latest: true
          architecture: "x64"
        env:
          AGENT_TOOLSDIRECTORY: /opt/hostedtoolcache
      - name: Add conda to system path
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          ## Install the local requirements file
          pip install -r $(dirname "${{ matrix.notebooks }}")/requirements.txt
          pip install pytest
          pip install nbval
          pip install nbconvert
      - name: Clear outputs for validation
        run: |
          jupyter nbconvert --clear-output --inplace ${{ matrix.notebooks }}
      - name: Validate notebooks 
        run: |
         pytest --nbval "${{ matrix.notebooks }}"
         
  notebook-execution:
    needs: gather-notebooks
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
            notebooks: ${{ fromJson(needs.gather-notebooks.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3   
      - name: Set up Python 3.9
        uses: actions/setup-python@v4 ## needed for caching
        with:
          python-version: '3.9'
          check-latest: true
          architecture: "x64"
        env:
          AGENT_TOOLSDIRECTORY: /opt/hostedtoolcache
      - name: Add conda to system path
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          ## Install the local requirements file
          pip install -r $(dirname "${{ matrix.notebooks }}")/requirements.txt
          pip install pytest
          pip install nbval
          pip install nbconvert
          
      - name: Execute notebooks
        run: |
          jupyter nbconvert --inplace --to ipynb --execute "${{ matrix.notebooks }}"    
          
      - name: Commit back to repo
        run: |
          BRANCH_NAME="gh-storage"
          git config --global user.name "Notebook CI"
          git config --global user.email "nowhere@none.com"

          git branch $BRANCH_NAME
          git checkout $BRANCH_NAME
          git fetch --unshallow origin
          
          # commit
          #git add "${{ matrix.notebooks }}"
          git commit -m "auto generated $BRANCH_NAME - "${{ matrix.notebooks }}"" "${{ matrix.notebooks }}"

          # force push to branch as backup
          git push -f origin $BRANCH_NAME
          
          # 'infinitely' pull,rebase,push until push is successful
          #PUSH_SUCCESS=0
          #while [ $PUSH_SUCCESS -eq 0 ]; do
          #    #git checkout master
          ##    #git pull origin $BRANCH_NAME
          #    git checkout $BRANCH_NAME
          #    #git rebase $BRANCH_NAME
          #    git checkout $BRANCH_NAME
          #    #git merge --ff-only $BRANCH_NAME
          #    git push -f origin $BRANCH_NAME
          #    if [ $? -eq 0 ]; then
          #        PUSH_SUCCESS=1
          #    fi
          #done
                  
  deploy-book:
    needs: [notebook-execution, notebook-validation]
    runs-on: ubuntu-latest
    steps:
    - name: Free up disk space
      run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    - uses: actions/checkout@v3
    - name: Checkout gh-storage branch
      run:
          BRANCH_NAME="gh-storage"
          git checkout main
          git checkout $BRANCH_NAME -- notebooks/
        
    - name: Set up Python 3.9
      uses: actions/setup-python@v4 ## needed for caching
      with:
        python-version: '3.9'
        check-latest: true
        architecture: "x64"
      env:
        AGENT_TOOLSDIRECTORY: /opt/hostedtoolcache

    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install Python dependencies
      run: |
        sudo apt-get install python3-pip
        ## Install the global requirements file - needed for jupyter-book
        #pip install -r requirements.txt
        pip install ghp-import
        pip install jupyter-book
        pip install myst-nb
        pip install nbval
        ## work-around to bypass the jupyter-book lower version
        pip install jsonschema==4.6.0
        PATH="${PATH}:${HOME}/.local/bin"
    - name: Build book HTML 
      run: |
        jupyter-book build .
    - name: Execute JDAVIZ placeholder substitution
      run: |
        cp jdaviz_placeholder_new.png _build/html                                                                                                                 
        ./placeholder.sh
    # Push the book's HTML to github-pages
    - name: GitHub Pages action
      uses: peaceiris/actions-gh-pages@v3.6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./_build/html

